name: Unittest

on:
  push:
    branches: "*"
  pull_request:
    branches: "*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start database
        run: docker compose up -d db

      - name: Create .env file
        run: |
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env

      - name: Wait for database
        run: |
          echo "Waiting for MySQL to be ready..."
          timeout 90 bash -c 'until docker compose exec -T db mysqladmin ping -h 127.0.0.1 -uroot -p${{ env.DB_PASSWORD }} --silent; do sleep 2; done'
          echo "Database is ready!"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Generate swagger server
        run: |
          npx @openapitools/openapi-generator-cli generate \
            -i openapi/ku-seek-api.yml \
            -g python-flask \
            -o swagger_server

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run alembic migration
        run: alembic upgrade head 

      - name: Run tests
        run: python -m unittest discover tests

      - name: Cleanup
        if: always()
        run: docker compose down -v