openapi: 3.0.0

info:
  title: KU SEEK 
  description: CRUD operations for KU SEEK
  version: 2.0.0

servers:
  - url: /api/v1

paths:
  /csrf-token:
    get:
      summary: Get a csrf-token for form validation
      operationId: controllers.auth_controller.get_csrf_token
      responses:
        200:
          description: Return a csrf-token for validation
          content:
            application/json:
              schema:
                type: object
                properties:
                  csrf_token: 
                    type: string


  /auth/oauth:
    post:
      summary: Login or Register a user and return user credentials.
      operationId: controllers.auth_controller.handle_authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: The grant code from the oauth2 flow
      responses: 
        200:
          description: return client_id and access/refresh tokens
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserCredentials'
        400:
          description: Invalid authorization code 

  /jobs:
    get:
      summary: Get all jobs in the database
      operationId: controllers.controller.get_all_jobs
      responses:
        200:
          description: A list of jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'

  /test/tasks:
    get:
      summary: Get all tasks in the database
      operationId: controllers.controller.get_all_tasks
      responses:
        200:
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      operationId: controllers.controller.create_task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        201:
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /test/tasks/{task_id}:
    parameters:
      - name: task_id
        in: path
        required: true
        description: The ID of the task
        schema:
          type: string
    get:
      summary: Get a single task by ID
      operationId: controllers.controller.get_task_by_id
      responses:
        200:
          description: A single task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        404:
          description: Task not found
    put:
      summary: Update an existing task
      operationId: controllers.controller.update_task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        200:
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        404:
          description: Task not found
    delete:
      summary: Delete a task
      operationId: controllers.controller.delete_task
      responses:
        204:
          description: Task deleted successfully
        404:
          description: Task not found

components:
  schemas:
    Job:
        type: object
        required:
          - id
          - company_id
          - role
          - status
          - created_at
        properties:
          id:
            type: integer
            description: The unique identifier for a job
            example: 1
          company_id:
            type: integer
            description: The ID of the company posting the job
            example: 5
          description:
            type: string
            description: Detailed description of the job
            example: "We are looking for a passionate software developer to join our team (Just Kidding)..."
          role:
            type: string
            maxLength: 50
            description: The job role/position title
            example: "Software Developer"
          salary_min:
            type: number
            format: float
            description: Minimum salary offered
            example: 30000.0
          salary_max:
            type: number
            format: float
            description: Maximum salary offered
            example: 50000.0
          location:
            type: string
            maxLength: 255
            description: Job location
            example: "Bangkok, Thailand"
          work_hours:
            type: string
            maxLength: 20
            description: Working hours
            example: "9:00 AM - 5:00 PM"
          job_type:
            type: string
            maxLength: 40
            description: Type of employment
            enum: ["full-time", "part-time", "internship", "contract", "freelance"]
            example: "full-time"
          status:
            type: string
            maxLength: 20
            description: Current status of the job posting
            enum: ["pending", "approved", "rejected"]
            default: "pending"
            example: "approved"
          visibility:
            type: boolean
            description: Whether the job is visible to students
            example: true
          capacity:
            type: integer
            description: Number of positions available
            example: 3
          end_date:
            type: string
            format: date-time
            description: Application deadline
            example: "2025-12-31T23:59:59Z"
          created_at:
            type: string
            format: date-time
            description: When the job was created
            example: "2025-09-06T10:30:00Z"
          approved_by:
            type: integer
            description: ID of the user who approved this job
            example: 10
          skills:
            type: array
            description: List of required skills for this job
            items:
              $ref: '#/components/schemas/Skill'
          tags:
            type: array
            description: List of tags associated with this job
            items:
              $ref: '#/components/schemas/Tag'
          company:
            $ref: '#/components/schemas/Company'
    
    JobInput:
      type: object
      required:
        - company_id
        - role
      properties:
        company_id:
          type: integer
          description: The ID of the company posting the job
          example: 5
        description:
          type: string
          description: Detailed description of the job
        role:
          type: string
          maxLength: 50
          description: The job role/position title
        salary_min:
          type: number
          format: float
          description: Minimum salary offered
        salary_max:
          type: number
          format: float
          description: Maximum salary offered
        location:
          type: string
          maxLength: 255
          description: Job location
        work_hours:
          type: string
          maxLength: 20
          description: Working hours
        job_type:
          type: string
          maxLength: 40
          description: Type of employment
          enum: ["full-time", "part-time", "internship", "contract", "freelance"]
        visibility:
          type: boolean
          description: Whether the job is visible to students
          default: true
        capacity:
          type: integer
          description: Number of positions available
        end_date:
          type: string
          format: date-time
          description: Application deadline
        skill_ids:
          type: array
          description: Array of skill IDs required for this job
          items:
            type: integer
        tag_ids:
          type: array
          description: Array of tag IDs associated with this job
          items:
            type: integer

    Skill:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier for a skill
          example: 1
        name:
          type: string
          maxLength: 40
          description: The name of the skill
          example: "JavaScript"
        type:
          type: string
          maxLength: 40
          description: The type/category of the skill
          example: "Programming Language"

    Tag:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier for a tag
          example: 1
        name:
          type: string
          maxLength: 40
          description: The name of the tag
          example: "Remote Work"

    Company:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier for a company
          example: 1
        user_id:
          type: integer
          description: The user ID associated with this company
          example: 5
        company_name:
          type: string
          maxLength: 255
          description: Name of the company
          example: "Tech Solutions Ltd."
        company_type:
          type: string
          maxLength: 50
          description: Type of company
          example: "Technology"
        company_industry:
          type: string
          maxLength: 100
          description: Industry sector
          example: "Software Development"
        company_size:
          type: string
          maxLength: 50
          description: Size of the company
          example: "50-100 employees"
        company_website:
          type: string
          maxLength: 255
          description: Company website URL
          example: "https://www.techsolutions.com"
        full_location:
          type: string
          maxLength: 255
          description: Full address of the company
          example: "123 Tech Street, Bangkok, Thailand 10110"
          
    Task:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          description: The unique identifier for a task
        name:
          type: string
          description: The name of the task
        completed:
          type: boolean
          description: The completion status of the task
          default: false
    TaskInput:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the task
        completed:
          type: boolean
          description: The completion status of the task
          default: false
    UserCredentials:
      type: object
      required:
        - uid
        - access_token
        - refresh_token
      properties:
        uid:
          type: string
          description: The user's uid
        access_token:
          $ref: '#/components/schemas/token'
        refresh_token:
          $ref: '#/components/schemas/token'
    token:
      type: object
      required:
        - token
        - issued
        - expire
      properties:
        token:
          type: string
          description: The token itself
        issued:
          type: string
          description: The token's issued time in UTC
        expire:
          type: string
          description: The token's expiry time in UTC
