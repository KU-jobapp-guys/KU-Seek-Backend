"""Added all tables to the project

Revision ID: 64cbc2db5afb
Revises: 16882f9cb8bf
Create Date: 2025-09-14 12:24:48.409955

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '64cbc2db5afb'
down_revision: Union[str, Sequence[str], None] = '16882f9cb8bf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('jobs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('salary_min', sa.Float(), nullable=False),
    sa.Column('salary_max', sa.Float(), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=False),
    sa.Column('work_hours', sa.String(length=20), nullable=False),
    sa.Column('job_type', sa.String(length=40), nullable=False),
    sa.Column('job_level', sa.String(length=40), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False, comment='pending, approved, rejected'),
    sa.Column('visibility', sa.Boolean(), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('approved_by', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bookmarks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id', 'job_id', name='unique_student_job')
    )
    op.create_table('job_applications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('resume', sa.String(length=500), nullable=False),
    sa.Column('letter_of_application', sa.String(length=500), nullable=False),
    sa.Column('additional_document', sa.String(length=500), nullable=True),
    sa.Column('phone_number', sa.String(length=12), nullable=False),
    sa.Column('status', sa.String(length=30), nullable=False, comment='pending, accepted, rejected'),
    sa.Column('applied_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job_skills',
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['skill_id'], ['terms.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('job_id', 'skill_id')
    )
    op.create_table('job_tags',
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('job_id', 'tag_id')
    )
    op.create_table('student_histories',
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Uuid(), nullable=False),
    sa.Column('viewed_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('job_id', 'student_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('student_histories')
    op.drop_table('job_tags')
    op.drop_table('job_skills')
    op.drop_table('job_applications')
    op.drop_table('bookmarks')
    op.drop_table('jobs')
    # ### end Alembic commands ###
