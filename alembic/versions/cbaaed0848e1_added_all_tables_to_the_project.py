"""Added all tables to the project

Revision ID: cbaaed0848e1
Revises: 16882f9cb8bf
Create Date: 2025-09-14 11:49:21.039647

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'cbaaed0848e1'
down_revision: Union[str, Sequence[str], None] = '16882f9cb8bf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('educations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('curriculum_name', sa.String(length=255), nullable=False),
    sa.Column('university', sa.String(length=255), nullable=False),
    sa.Column('major', sa.String(length=255), nullable=False),
    sa.Column('year_of_study', sa.Date(), nullable=False),
    sa.Column('graduate_year', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=40), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('terms',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=40), nullable=True),
    sa.Column('type', sa.String(length=40), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('google_uid', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('announcements',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('professor_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['professor_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('companies',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=False),
    sa.Column('company_type', sa.String(length=255), nullable=False),
    sa.Column('company_industry', sa.String(length=255), nullable=False),
    sa.Column('company_size', sa.String(length=255), nullable=False),
    sa.Column('company_website', sa.String(length=255), nullable=False),
    sa.Column('full_location', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('professor_connections',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('professor_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['professor_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('professors',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('department', sa.String(length=255), nullable=False),
    sa.Column('position', sa.String(length=255), nullable=False),
    sa.Column('office_location', sa.String(length=255), nullable=False),
    sa.Column('education_id', sa.Integer(), nullable=True),
    sa.Column('research_interests', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['education_id'], ['educations.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profile_skills',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['skill_id'], ['terms.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'skill_id')
    )
    op.create_table('profiles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('about', sa.Text(), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('contact_email', sa.String(length=255), nullable=True),
    sa.Column('gender', sa.String(length=1), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('user_type', sa.String(length=20), nullable=True, comment='student, company, professor, admin'),
    sa.Column('profile_img', sa.String(length=100), nullable=True),
    sa.Column('banner_img', sa.String(length=100), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('student_documents',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('students',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('nisit_id', sa.String(length=255), nullable=False),
    sa.Column('education_id', sa.Integer(), nullable=True),
    sa.Column('gpa', sa.DECIMAL(precision=3, scale=2), nullable=False),
    sa.Column('interests', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['education_id'], ['educations.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nisit_id')
    )
    op.create_table('jobs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('salary_min', sa.Float(), nullable=False),
    sa.Column('salary_max', sa.Float(), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=False),
    sa.Column('work_hours', sa.String(length=20), nullable=False),
    sa.Column('job_type', sa.String(length=40), nullable=False),
    sa.Column('job_level', sa.String(length=40), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False, comment='pending, approved, rejected'),
    sa.Column('visibility', sa.Boolean(), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('approved_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bookmarks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id', 'job_id', name='unique_student_job')
    )
    op.create_table('job_applications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('resume', sa.String(length=500), nullable=False),
    sa.Column('letter_of_application', sa.String(length=500), nullable=False),
    sa.Column('additional_document', sa.String(length=500), nullable=True),
    sa.Column('phone_number', sa.String(length=12), nullable=False),
    sa.Column('status', sa.String(length=30), nullable=False, comment='pending, accepted, rejected'),
    sa.Column('applied_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job_skills',
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['skill_id'], ['terms.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('job_id', 'skill_id')
    )
    op.create_table('job_tags',
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('job_id', 'tag_id')
    )
    op.create_table('student_histories',
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('viewed_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('job_id', 'student_id')
    )
    op.drop_table('User')
    op.drop_constraint(op.f('Tokens_ibfk_1'), 'Tokens', type_='foreignkey')
    op.create_foreign_key(None, 'Tokens', 'users', ['uid'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'Tokens', type_='foreignkey')
    op.create_foreign_key(op.f('Tokens_ibfk_1'), 'Tokens', 'User', ['uid'], ['id'])
    op.create_table('User',
    sa.Column('id', mysql.CHAR(length=32), nullable=False),
    sa.Column('google_uid', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('email', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('password', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('is_admin', mysql.TINYINT(display_width=1), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.drop_table('student_histories')
    op.drop_table('job_tags')
    op.drop_table('job_skills')
    op.drop_table('job_applications')
    op.drop_table('bookmarks')
    op.drop_table('jobs')
    op.drop_table('students')
    op.drop_table('student_documents')
    op.drop_table('profiles')
    op.drop_table('profile_skills')
    op.drop_table('professors')
    op.drop_table('professor_connections')
    op.drop_table('companies')
    op.drop_table('announcements')
    op.drop_table('users')
    op.drop_table('terms')
    op.drop_table('tags')
    op.drop_table('educations')
    # ### end Alembic commands ###
